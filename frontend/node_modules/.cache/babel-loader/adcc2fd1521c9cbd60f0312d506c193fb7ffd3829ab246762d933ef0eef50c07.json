{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sergio Moscoso\\\\Downloads\\\\Algoritmo Genetico para optimizacion de espacios\\\\frontend\\\\src\\\\components\\\\ConvergenceChart.jsx\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConvergenceChart({\n  historial\n}) {\n  const data = historial.map((fitness, index) => ({\n    generacion: index + 1,\n    fitness: fitness\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#2a2a2a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"generacion\",\n        label: {\n          value: \"Generación\",\n          position: \"insideBottom\",\n          offset: -5,\n          fill: \"#888888\"\n        },\n        stroke: \"#888888\",\n        tick: {\n          fill: \"#888888\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        label: {\n          value: \"Fitness (Ganancia)\",\n          angle: -90,\n          position: \"insideLeft\",\n          fill: \"#888888\"\n        },\n        stroke: \"#888888\",\n        tick: {\n          fill: \"#888888\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        contentStyle: {\n          backgroundColor: \"#111111\",\n          border: \"1px solid #2a2a2a\",\n          borderRadius: \"8px\",\n          color: \"#ededed\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        wrapperStyle: {\n          color: \"#888888\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"fitness\",\n        stroke: \"#0070f3\",\n        strokeWidth: 2,\n        dot: false,\n        name: \"Mejor Fitness\",\n        activeDot: {\n          r: 6,\n          fill: \"#0070f3\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ConvergenceChart;\nvar _c;\n$RefreshReg$(_c, \"ConvergenceChart\");","map":{"version":3,"names":["_jsxFileName","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ConvergenceChart","historial","data","map","fitness","index","generacion","width","height","children","strokeDasharray","stroke","fileName","lineNumber","columnNumber","dataKey","label","value","position","offset","fill","tick","angle","contentStyle","backgroundColor","border","borderRadius","color","wrapperStyle","type","strokeWidth","dot","name","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/Sergio Moscoso/Downloads/Algoritmo Genetico para optimizacion de espacios/frontend/src/components/ConvergenceChart.jsx"],"sourcesContent":["\"use client\"\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\"\n\ninterface ConvergenceChartProps {\n  historial: number[]\n}\n\nexport default function ConvergenceChart({ historial }: ConvergenceChartProps) {\n  const data = historial.map((fitness, index) => ({\n    generacion: index + 1,\n    fitness: fitness,\n  }))\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2a2a2a\" />\n        <XAxis\n          dataKey=\"generacion\"\n          label={{ value: \"Generación\", position: \"insideBottom\", offset: -5, fill: \"#888888\" }}\n          stroke=\"#888888\"\n          tick={{ fill: \"#888888\" }}\n        />\n        <YAxis\n          label={{ value: \"Fitness (Ganancia)\", angle: -90, position: \"insideLeft\", fill: \"#888888\" }}\n          stroke=\"#888888\"\n          tick={{ fill: \"#888888\" }}\n        />\n        <Tooltip\n          contentStyle={{\n            backgroundColor: \"#111111\",\n            border: \"1px solid #2a2a2a\",\n            borderRadius: \"8px\",\n            color: \"#ededed\",\n          }}\n        />\n        <Legend wrapperStyle={{ color: \"#888888\" }} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"fitness\"\n          stroke=\"#0070f3\"\n          strokeWidth={2}\n          dot={false}\n          name=\"Mejor Fitness\"\n          activeDot={{ r: 6, fill: \"#0070f3\" }}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;AAEZ,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM7G,eAAe,SAASC,gBAAgBA,CAAC;EAAEC;AAAiC,CAAC,EAAE;EAC7E,MAAMC,IAAI,GAAGD,SAAS,CAACE,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;IAC9CC,UAAU,EAAED,KAAK,GAAG,CAAC;IACrBD,OAAO,EAAEA;EACX,CAAC,CAAC,CAAC;EAEH,oBACEL,OAAA,CAACF,mBAAmB;IAACU,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CV,OAAA,CAACT,SAAS;MAACY,IAAI,EAAEA,IAAK;MAAAO,QAAA,gBACpBV,OAAA,CAACL,aAAa;QAACgB,eAAe,EAAC,KAAK;QAACC,MAAM,EAAC;MAAS;QAAAC,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDf,OAAA,CAACP,KAAK;QACJuB,OAAO,EAAC,YAAY;QACpBC,KAAK,EAAE;UAAEC,KAAK,EAAE,YAAY;UAAEC,QAAQ,EAAE,cAAc;UAAEC,MAAM,EAAE,CAAC,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAE;QACtFT,MAAM,EAAC,SAAS;QAChBU,IAAI,EAAE;UAAED,IAAI,EAAE;QAAU;MAAE;QAAAR,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFf,OAAA,CAACN,KAAK;QACJuB,KAAK,EAAE;UAAEC,KAAK,EAAE,oBAAoB;UAAEK,KAAK,EAAE,CAAC,EAAE;UAAEJ,QAAQ,EAAE,YAAY;UAAEE,IAAI,EAAE;QAAU,CAAE;QAC5FT,MAAM,EAAC,SAAS;QAChBU,IAAI,EAAE;UAAED,IAAI,EAAE;QAAU;MAAE;QAAAR,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFf,OAAA,CAACJ,OAAO;QACN4B,YAAY,EAAE;UACZC,eAAe,EAAE,SAAS;UAC1BC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,KAAK,EAAE;QACT;MAAE;QAAAf,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFf,OAAA,CAACH,MAAM;QAACgC,YAAY,EAAE;UAAED,KAAK,EAAE;QAAU;MAAE;QAAAf,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9Cf,OAAA,CAACR,IAAI;QACHsC,IAAI,EAAC,UAAU;QACfd,OAAO,EAAC,SAAS;QACjBJ,MAAM,EAAC,SAAS;QAChBmB,WAAW,EAAE,CAAE;QACfC,GAAG,EAAE,KAAM;QACXC,IAAI,EAAC,eAAe;QACpBC,SAAS,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEd,IAAI,EAAE;QAAU;MAAE;QAAAR,QAAA,EAAAvB,YAAA;QAAAwB,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAF,QAAA,EAAAvB,YAAA;MAAAwB,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAF,QAAA,EAAAvB,YAAA;IAAAwB,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B;AAACqB,EAAA,GA1CuBnC,gBAAgB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}