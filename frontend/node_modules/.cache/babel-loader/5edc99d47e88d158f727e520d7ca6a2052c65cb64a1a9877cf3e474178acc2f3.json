{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sergio Moscoso\\\\Downloads\\\\Algoritmo Genetico para optimizacion de espacios\\\\frontend\\\\src\\\\components\\\\DistributionCanvas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AREA_MAXIMA = 50;\nconst CANVAS_WIDTH = 800;\nconst CANVAS_HEIGHT = 600;\nconst DistributionCanvas = ({\n  distribucion\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current || !distribucion) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Limpiar canvas\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Dibujar fondo\n    ctx.fillStyle = \"#f8f9fa\";\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Dibujar borde\n    ctx.strokeStyle = \"#dee2e6\";\n    ctx.lineWidth = 2;\n    ctx.strokeRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Colores para los artículos\n    const colores = [\"#3b82f6\", \"#ef4444\", \"#10b981\", \"#f59e0b\", \"#8b5cf6\", \"#ec4899\", \"#14b8a6\", \"#f97316\", \"#6366f1\", \"#84cc16\", \"#06b6d4\", \"#f43f5e\"];\n\n    // Calcular escala (área del canvas representa 50 m²)\n    const escala = Math.sqrt(CANVAS_WIDTH * CANVAS_HEIGHT / AREA_MAXIMA);\n    let x = 10;\n    let y = 10;\n    let maxHeightInRow = 0;\n    distribucion.forEach((item, index) => {\n      const areaUnitaria = item.area;\n      const cantidad = item.cantidad;\n      for (let i = 0; i < cantidad; i++) {\n        // Calcular dimensiones del rectángulo (asumiendo cuadrado)\n        const lado = Math.sqrt(areaUnitaria) * escala;\n\n        // Si no cabe en la fila actual, pasar a la siguiente\n        if (x + lado > CANVAS_WIDTH - 10) {\n          x = 10;\n          y += maxHeightInRow + 5;\n          maxHeightInRow = 0;\n        }\n\n        // Si no cabe verticalmente, detener\n        if (y + lado > CANVAS_HEIGHT - 10) {\n          break;\n        }\n\n        // Dibujar rectángulo\n        ctx.fillStyle = colores[index % colores.length];\n        ctx.fillRect(x, y, lado, lado);\n\n        // Dibujar borde\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.lineWidth = 2;\n        ctx.strokeRect(x, y, lado, lado);\n\n        // Dibujar texto si el rectángulo es suficientemente grande\n        if (lado > 40) {\n          ctx.fillStyle = \"#ffffff\";\n          ctx.font = \"bold 12px sans-serif\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          const texto = item.nombre.length > 15 ? item.nombre.substring(0, 12) + \"...\" : item.nombre;\n          ctx.fillText(texto, x + lado / 2, y + lado / 2);\n        }\n        x += lado + 5;\n        maxHeightInRow = Math.max(maxHeightInRow, lado);\n      }\n    });\n\n    // Dibujar leyenda\n    const legendX = 10;\n    const legendY = CANVAS_HEIGHT - 20 - distribucion.length * 25;\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.9)\";\n    ctx.fillRect(legendX - 5, legendY - 5, 200, distribucion.length * 25 + 10);\n    ctx.strokeStyle = \"#dee2e6\";\n    ctx.strokeRect(legendX - 5, legendY - 5, 200, distribucion.length * 25 + 10);\n    distribucion.forEach((item, index) => {\n      // Cuadrado de color\n      ctx.fillStyle = colores[index % colores.length];\n      ctx.fillRect(legendX, legendY + index * 25, 15, 15);\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.strokeRect(legendX, legendY + index * 25, 15, 15);\n\n      // Texto\n      ctx.fillStyle = \"#212529\";\n      ctx.font = \"12px sans-serif\";\n      ctx.textAlign = \"left\";\n      ctx.fillText(`${item.nombre} (${item.cantidad})`, legendX + 20, legendY + index * 25 + 10);\n    });\n  }, [distribucion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        border: \"1px solid #dee2e6\",\n        borderRadius: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(DistributionCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = DistributionCanvas;\nexport default DistributionCanvas;\nvar _c;\n$RefreshReg$(_c, \"DistributionCanvas\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","jsxDEV","_jsxDEV","AREA_MAXIMA","CANVAS_WIDTH","CANVAS_HEIGHT","DistributionCanvas","distribucion","canvasRef","current","canvas","ctx","getContext","clearRect","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","colores","escala","Math","sqrt","x","y","maxHeightInRow","forEach","item","index","areaUnitaria","area","cantidad","i","lado","length","font","textAlign","textBaseline","texto","nombre","substring","fillText","max","legendX","legendY","className","children","ref","width","height","style","border","borderRadius","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sergio Moscoso/Downloads/Algoritmo Genetico para optimizacion de espacios/frontend/src/components/DistributionCanvas.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef } from \"react\"\n\nconst AREA_MAXIMA = 50\nconst CANVAS_WIDTH = 800\nconst CANVAS_HEIGHT = 600\n\nconst DistributionCanvas = ({ distribucion }) => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !distribucion) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext(\"2d\")\n\n    // Limpiar canvas\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n    // Dibujar fondo\n    ctx.fillStyle = \"#f8f9fa\"\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n    // Dibujar borde\n    ctx.strokeStyle = \"#dee2e6\"\n    ctx.lineWidth = 2\n    ctx.strokeRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n    // Colores para los artículos\n    const colores = [\n      \"#3b82f6\",\n      \"#ef4444\",\n      \"#10b981\",\n      \"#f59e0b\",\n      \"#8b5cf6\",\n      \"#ec4899\",\n      \"#14b8a6\",\n      \"#f97316\",\n      \"#6366f1\",\n      \"#84cc16\",\n      \"#06b6d4\",\n      \"#f43f5e\",\n    ]\n\n    // Calcular escala (área del canvas representa 50 m²)\n    const escala = Math.sqrt((CANVAS_WIDTH * CANVAS_HEIGHT) / AREA_MAXIMA)\n\n    let x = 10\n    let y = 10\n    let maxHeightInRow = 0\n\n    distribucion.forEach((item, index) => {\n      const areaUnitaria = item.area\n      const cantidad = item.cantidad\n\n      for (let i = 0; i < cantidad; i++) {\n        // Calcular dimensiones del rectángulo (asumiendo cuadrado)\n        const lado = Math.sqrt(areaUnitaria) * escala\n\n        // Si no cabe en la fila actual, pasar a la siguiente\n        if (x + lado > CANVAS_WIDTH - 10) {\n          x = 10\n          y += maxHeightInRow + 5\n          maxHeightInRow = 0\n        }\n\n        // Si no cabe verticalmente, detener\n        if (y + lado > CANVAS_HEIGHT - 10) {\n          break\n        }\n\n        // Dibujar rectángulo\n        ctx.fillStyle = colores[index % colores.length]\n        ctx.fillRect(x, y, lado, lado)\n\n        // Dibujar borde\n        ctx.strokeStyle = \"#ffffff\"\n        ctx.lineWidth = 2\n        ctx.strokeRect(x, y, lado, lado)\n\n        // Dibujar texto si el rectángulo es suficientemente grande\n        if (lado > 40) {\n          ctx.fillStyle = \"#ffffff\"\n          ctx.font = \"bold 12px sans-serif\"\n          ctx.textAlign = \"center\"\n          ctx.textBaseline = \"middle\"\n\n          const texto = item.nombre.length > 15 ? item.nombre.substring(0, 12) + \"...\" : item.nombre\n\n          ctx.fillText(texto, x + lado / 2, y + lado / 2)\n        }\n\n        x += lado + 5\n        maxHeightInRow = Math.max(maxHeightInRow, lado)\n      }\n    })\n\n    // Dibujar leyenda\n    const legendX = 10\n    const legendY = CANVAS_HEIGHT - 20 - distribucion.length * 25\n\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.9)\"\n    ctx.fillRect(legendX - 5, legendY - 5, 200, distribucion.length * 25 + 10)\n    ctx.strokeStyle = \"#dee2e6\"\n    ctx.strokeRect(legendX - 5, legendY - 5, 200, distribucion.length * 25 + 10)\n\n    distribucion.forEach((item, index) => {\n      // Cuadrado de color\n      ctx.fillStyle = colores[index % colores.length]\n      ctx.fillRect(legendX, legendY + index * 25, 15, 15)\n      ctx.strokeStyle = \"#ffffff\"\n      ctx.strokeRect(legendX, legendY + index * 25, 15, 15)\n\n      // Texto\n      ctx.fillStyle = \"#212529\"\n      ctx.font = \"12px sans-serif\"\n      ctx.textAlign = \"left\"\n      ctx.fillText(`${item.nombre} (${item.cantidad})`, legendX + 20, legendY + index * 25 + 10)\n    })\n  }, [distribucion])\n\n  return (\n    <div className=\"canvas-container\">\n      <canvas\n        ref={canvasRef}\n        width={CANVAS_WIDTH}\n        height={CANVAS_HEIGHT}\n        style={{ border: \"1px solid #dee2e6\", borderRadius: \"8px\" }}\n      />\n    </div>\n  )\n}\n\nexport default DistributionCanvas\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}