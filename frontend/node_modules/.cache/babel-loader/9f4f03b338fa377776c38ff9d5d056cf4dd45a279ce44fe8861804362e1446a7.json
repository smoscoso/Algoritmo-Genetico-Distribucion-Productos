{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sergio Moscoso\\\\Downloads\\\\Algoritmo Genetico para optimizacion de espacios\\\\frontend\\\\src\\\\components\\\\DistributionCanvas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AREA_MAXIMA = 50;\nconst CANVAS_WIDTH = 800;\nconst CANVAS_HEIGHT = 600;\nconst DistributionCanvas = ({\n  distribucion\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current || !distribucion) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"#f8f9fa\";\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.strokeStyle = \"#dee2e6\";\n    ctx.lineWidth = 3;\n    ctx.strokeRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    const colores = [\"#667eea\", \"#12b886\", \"#fab005\", \"#fa5252\", \"#228be6\", \"#be4bdb\", \"#20c997\", \"#fd7e14\", \"#4c6ef5\", \"#82c91e\", \"#15aabf\", \"#e64980\"];\n    const escala = Math.sqrt(CANVAS_WIDTH * CANVAS_HEIGHT / AREA_MAXIMA);\n    let x = 10;\n    let y = 10;\n    let maxHeightInRow = 0;\n    distribucion.forEach((item, index) => {\n      const areaUnitaria = item.area;\n      const cantidad = item.cantidad;\n      for (let i = 0; i < cantidad; i++) {\n        const lado = Math.sqrt(areaUnitaria) * escala;\n        if (x + lado > CANVAS_WIDTH - 10) {\n          x = 10;\n          y += maxHeightInRow + 5;\n          maxHeightInRow = 0;\n        }\n        if (y + lado > CANVAS_HEIGHT - 10) {\n          break;\n        }\n        ctx.shadowColor = \"rgba(0, 0, 0, 0.15)\";\n        ctx.shadowBlur = 8;\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.fillStyle = colores[index % colores.length];\n        ctx.fillRect(x, y, lado, lado);\n        ctx.shadowColor = \"transparent\";\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.lineWidth = 3;\n        ctx.strokeRect(x, y, lado, lado);\n        if (lado > 40) {\n          ctx.fillStyle = \"#ffffff\";\n          ctx.font = \"bold 13px -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          const texto = item.nombre.length > 15 ? item.nombre.substring(0, 12) + \"...\" : item.nombre;\n          ctx.shadowColor = \"rgba(0, 0, 0, 0.3)\";\n          ctx.shadowBlur = 4;\n          ctx.fillText(texto, x + lado / 2, y + lado / 2);\n          ctx.shadowColor = \"transparent\";\n          ctx.shadowBlur = 0;\n        }\n        x += lado + 5;\n        maxHeightInRow = Math.max(maxHeightInRow, lado);\n      }\n    });\n    const legendX = 15;\n    const legendY = CANVAS_HEIGHT - 25 - distribucion.length * 28;\n    ctx.shadowColor = \"rgba(0, 0, 0, 0.1)\";\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 2;\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.98)\";\n    ctx.fillRect(legendX - 8, legendY - 8, 240, distribucion.length * 28 + 16);\n    ctx.shadowColor = \"transparent\";\n    ctx.shadowBlur = 0;\n    ctx.strokeStyle = \"#dee2e6\";\n    ctx.lineWidth = 2;\n    ctx.strokeRect(legendX - 8, legendY - 8, 240, distribucion.length * 28 + 16);\n    distribucion.forEach((item, index) => {\n      ctx.shadowColor = \"rgba(0, 0, 0, 0.2)\";\n      ctx.shadowBlur = 4;\n      ctx.fillStyle = colores[index % colores.length];\n      ctx.fillRect(legendX, legendY + index * 28, 18, 18);\n      ctx.shadowColor = \"transparent\";\n      ctx.shadowBlur = 0;\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(legendX, legendY + index * 28, 18, 18);\n      ctx.fillStyle = \"#212529\";\n      ctx.font = \"600 13px -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\";\n      ctx.textAlign = \"left\";\n      ctx.fillText(`${item.nombre} (${item.cantidad})`, legendX + 26, legendY + index * 28 + 12);\n    });\n  }, [distribucion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(DistributionCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = DistributionCanvas;\nexport default DistributionCanvas;\nvar _c;\n$RefreshReg$(_c, \"DistributionCanvas\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","jsxDEV","_jsxDEV","AREA_MAXIMA","CANVAS_WIDTH","CANVAS_HEIGHT","DistributionCanvas","distribucion","canvasRef","current","canvas","ctx","getContext","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","colores","escala","Math","sqrt","x","y","maxHeightInRow","forEach","item","index","areaUnitaria","area","cantidad","i","lado","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","length","font","textAlign","textBaseline","texto","nombre","substring","fillText","max","legendX","legendY","className","children","ref","width","height","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sergio Moscoso/Downloads/Algoritmo Genetico para optimizacion de espacios/frontend/src/components/DistributionCanvas.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef } from \"react\"\n\nconst AREA_MAXIMA = 50\nconst CANVAS_WIDTH = 800\nconst CANVAS_HEIGHT = 600\n\nconst DistributionCanvas = ({ distribucion }) => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !distribucion) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext(\"2d\")\n\n    ctx.fillStyle = \"#f8f9fa\"\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n    ctx.strokeStyle = \"#dee2e6\"\n    ctx.lineWidth = 3\n    ctx.strokeRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n    const colores = [\n      \"#667eea\",\n      \"#12b886\",\n      \"#fab005\",\n      \"#fa5252\",\n      \"#228be6\",\n      \"#be4bdb\",\n      \"#20c997\",\n      \"#fd7e14\",\n      \"#4c6ef5\",\n      \"#82c91e\",\n      \"#15aabf\",\n      \"#e64980\",\n    ]\n\n    const escala = Math.sqrt((CANVAS_WIDTH * CANVAS_HEIGHT) / AREA_MAXIMA)\n\n    let x = 10\n    let y = 10\n    let maxHeightInRow = 0\n\n    distribucion.forEach((item, index) => {\n      const areaUnitaria = item.area\n      const cantidad = item.cantidad\n\n      for (let i = 0; i < cantidad; i++) {\n        const lado = Math.sqrt(areaUnitaria) * escala\n\n        if (x + lado > CANVAS_WIDTH - 10) {\n          x = 10\n          y += maxHeightInRow + 5\n          maxHeightInRow = 0\n        }\n\n        if (y + lado > CANVAS_HEIGHT - 10) {\n          break\n        }\n\n        ctx.shadowColor = \"rgba(0, 0, 0, 0.15)\"\n        ctx.shadowBlur = 8\n        ctx.shadowOffsetX = 2\n        ctx.shadowOffsetY = 2\n\n        ctx.fillStyle = colores[index % colores.length]\n        ctx.fillRect(x, y, lado, lado)\n\n        ctx.shadowColor = \"transparent\"\n        ctx.shadowBlur = 0\n\n        ctx.strokeStyle = \"#ffffff\"\n        ctx.lineWidth = 3\n        ctx.strokeRect(x, y, lado, lado)\n\n        if (lado > 40) {\n          ctx.fillStyle = \"#ffffff\"\n          ctx.font = \"bold 13px -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\"\n          ctx.textAlign = \"center\"\n          ctx.textBaseline = \"middle\"\n\n          const texto = item.nombre.length > 15 ? item.nombre.substring(0, 12) + \"...\" : item.nombre\n\n          ctx.shadowColor = \"rgba(0, 0, 0, 0.3)\"\n          ctx.shadowBlur = 4\n          ctx.fillText(texto, x + lado / 2, y + lado / 2)\n          ctx.shadowColor = \"transparent\"\n          ctx.shadowBlur = 0\n        }\n\n        x += lado + 5\n        maxHeightInRow = Math.max(maxHeightInRow, lado)\n      }\n    })\n\n    const legendX = 15\n    const legendY = CANVAS_HEIGHT - 25 - distribucion.length * 28\n\n    ctx.shadowColor = \"rgba(0, 0, 0, 0.1)\"\n    ctx.shadowBlur = 10\n    ctx.shadowOffsetX = 0\n    ctx.shadowOffsetY = 2\n\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.98)\"\n    ctx.fillRect(legendX - 8, legendY - 8, 240, distribucion.length * 28 + 16)\n\n    ctx.shadowColor = \"transparent\"\n    ctx.shadowBlur = 0\n\n    ctx.strokeStyle = \"#dee2e6\"\n    ctx.lineWidth = 2\n    ctx.strokeRect(legendX - 8, legendY - 8, 240, distribucion.length * 28 + 16)\n\n    distribucion.forEach((item, index) => {\n      ctx.shadowColor = \"rgba(0, 0, 0, 0.2)\"\n      ctx.shadowBlur = 4\n      ctx.fillStyle = colores[index % colores.length]\n      ctx.fillRect(legendX, legendY + index * 28, 18, 18)\n\n      ctx.shadowColor = \"transparent\"\n      ctx.shadowBlur = 0\n\n      ctx.strokeStyle = \"#ffffff\"\n      ctx.lineWidth = 2\n      ctx.strokeRect(legendX, legendY + index * 28, 18, 18)\n\n      ctx.fillStyle = \"#212529\"\n      ctx.font = \"600 13px -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\"\n      ctx.textAlign = \"left\"\n      ctx.fillText(`${item.nombre} (${item.cantidad})`, legendX + 26, legendY + index * 28 + 12)\n    })\n  }, [distribucion])\n\n  return (\n    <div className=\"canvas-container\">\n      <canvas ref={canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n    </div>\n  )\n}\n\nexport default DistributionCanvas\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}